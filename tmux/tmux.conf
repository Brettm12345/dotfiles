# -- GENERAL -----------------------------

# Enable truecolor support
set -g default-terminal   "tmux-256color"
set-option -ga terminal-overrides ",xterm-termite:Tc"
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Prevent double-execution of profile, $SHELL needs to be explicitly in profile
# though
set -g default-command $SHELL
set -g default-shell /usr/bin/fish
set -s focus-events on

# increase scrollback buffer size
set -g history-limit 10000

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# enable mouse
setw -g mouse on

# fix mouse scrolling: enter copy mode on scroll-up, exits it when scrolled to bottom
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"


# -- DISPLAY -----------------------------

set -g set-titles on
set -g set-titles-string "tmux [#H] #S:#W:#T"

# Zero-based indexing is fine in programming languages, but not so much in a multiplexer
# when zero is on the other side of the keyboard.
set -g base-index 1
setw -g pane-base-index 1

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

# display tmux messages longer
set -g display-time 1500
set -g display-panes-time 800

# focus events enabled for terminals that support them
set -g focus-events on


# -- KEYBINDS ----------------------------

# set vi keys
setw -g mode-keys vi

# Enable xterm keys
setw -g xterm-keys on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0
set -sg repeat-time 600

# Custom prefix
set -g prefix C-Space
bind C-Space send-prefix

unbind C-b

## Pane management
# Saner splitting commands
unbind %
unbind '"'
bind s split-window -c "#{pane_current_path}" -v
bind v split-window -c "#{pane_current_path}" -h
bind c new-window -c "#{pane_current_path}"

# break pane into a window
bind = select-layout even-vertical
bind + select-layout even-horizontal
bind - break-pane
bind _ join-pane

# reload config without killing server
bind r source-file /home/brett/.config/tmux/tmux.conf \; display-message "  Config reloaded..".
bind ^r refresh-client

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

is_sk="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?sk$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 ($is_sk && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 ($is_sk && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"
bind C-w last-pane
bind C-n next-window
bind C-p previous-window

# Pane resizing
bind C-h resize-pane -L 6
bind C-j resize-pane -D 6
bind C-k resize-pane -U 6
bind C-l resize-pane -R 6
bind -n M-h resize-pane -L 6
bind -n M-j resize-pane -D 6
bind -n M-k resize-pane -U 6
bind -n M-l resize-pane -R 6

# Swap panes directionally
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind H run '$TMUX_HOME/scripts/swap-pane left'
bind J run '$TMUX_HOME/scripts/swap-pane down'
bind K run '$TMUX_HOME/scripts/swap-pane up'
bind L run '$TMUX_HOME/scripts/swap-pane right'
bind M run '$TMUX_HOME/scripts/swap-pane master'

bind o resize-pane -Z
bind S choose-session
bind W choose-window

bind n run 'TMUX= tmux new-session -t "$(basename \"$PWD\")" -d \; switch-client -t "$(basename \"$PWD\")"'
bind N run 'TMUX= tmux new-session -t "$(tmux display-message -p #S)" -s "$(tmux display-message -p #S-clone)" -d \; switch-client -n \; display-message "session #S cloned"'

# bind = select-layout tiled
bind | select-layout even-horizontal
bind _ select-layout even-vertical

# switch between sessions
bind -r [ switch-client -p
bind -r ] switch-client -n

# Disable confirmation
bind x kill-pane
bind X kill-window
bind q kill-session
bind Q kill-server

# Toggle the status bar
bind-key b set-option status

# -- COPY MODE ---------------------------

bind Enter copy-mode # enter copy mode
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-pipe 'xclip -in -selection clipboard'
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line


# -- CUSTOM ------------------------------

source "$TMUX_HOME/tmux.theme.conf"

# Support user overrides
if '[ -f ~/.tmux.conf ]' 'source ~/.tmux.conf'

# Set plugin path
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'kristijanhusak/tmux-simple-git-status'
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'

# Tmux prefix highlight
set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_fg colour4
set -g @prefix_highlight_bg colour0
set -g @prefix_highlight_output_suffix ''
set -g @prefix_highlight_empty_prompt ' Tmux '
set -g @prefix_highlight_empty_attr 'fg=colour8,bg=colour0'

# Start plugin manager
run -b "$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm"
